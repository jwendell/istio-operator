# This manifest installs the Istio install-cni container, as well
# as the Istio CNI plugin and config on
# each master and worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: istio-node
  namespace: {{ .Release.Namespace }}
  labels:
    heritage: {{ .Release.Service }}
    maistra-version: 0.12.0
    release: {{ .Release.Name }}
    istio: cni
spec:
  selector:
    matchLabels:
      istio: cni
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service }}
        maistra-version: 0.12.0
        release: {{ .Release.Name }}
        istio: cni
      annotations:
        sidecar.istio.io/inject: "false"
        # This, along with the CriticalAddonsOnly toleration below,
        # marks the pod as a critical add-on, ensuring it gets
        # priority scheduling and that its resources are reserved
        # if it ever gets evicted.
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      hostNetwork: true
      tolerations:
        # Make sure istio-node gets scheduled on all nodes.
        - effect: NoSchedule
          operator: Exists
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      serviceAccountName: istio-cni
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 0
{{- if .Values.global.priorityClassName }}
      priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
{{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.global.imagePullSecrets }}
      - name: {{ . }}
{{- end }}
{{- end }}
      containers:
        # This container installs the Istio CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
          image: "{{ .Values.global.hub }}/{{ .Values.image }}:{{ .Values.global.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          command: ["/install-cni.sh"]
          env:
            # Directory where the CNI config file should be created in
            - name: CNI_NET_DIR
              value: "/etc/cni/multus/net.d"
            # Directory where the CNI config file should be created in (host path mounted in the container)
            - name: MOUNTED_CNI_NET_DIR
              value: "/host/etc/cni/multus/net.d"
            # Name of the CNI config file to create.
            - name: CNI_CONF_NAME
              value: "{{ .Release.Namespace }}-istio-cni.conf"
            # Name of the kubeconfig file used by CNI agent
            - name: KUBECFG_FILE_NAME
              value: "{{ .Release.Namespace }}-istio-cni.kubeconfig"
            # Prefix for the istio-cni binary and install-iptables.sh script
            - name: CNI_BINARIES_PREFIX
              value: "{{ .Release.Namespace }}-"
            # Deploy as a standalone CNI plugin instead of as chained
            - name: CHAINED_CNI_PLUGIN
              value: "false"
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: istio-cni-config
                  key: cni_network_config
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/
              name: etc-cni-dir
          resources:
{{- if .Values.resources }}
{{ toYaml .Values.resources | indent 12 }}
{{- else }}
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 500m
              memory: 100Mi
{{- end }}
      volumes:
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /opt/multus/bin
        - name: etc-cni-dir
          hostPath:
            path: /etc/cni